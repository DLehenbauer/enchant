import { h, Component } from 'preact';
import * as Await from '../../util/await';
import * as style from './style.css';
import { ZVM } from 'ifvms';

const glkoteLoaded = Promise.all([
	Await.script('/external/glkote/jquery-1.12.4.min.js')			// Must load jQuery prior to dialog.js
		.then(() => Await.script('/external/glkote/dialog.js')),
	Await.script([
		'/external/glkote/glkote.js',								// Load glkote.js & glkapi.js in parallel
		'/external/glkote/glkapi.js',								// w/each other and dialog.js
	])
]);

export interface VMProps {}
export interface VMState {}

const z3 = new Uint8Array([0x03, 0x00, 0x00, 0x00, 0x00, 0xBA, 0x00, 0xBA, 0x00, 0xB5, 0x00, 0x40, 0x00, 0x7E, 0x00, 0xB5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5A, 0x04, 0x00, 0x00, 0x0D, 0x10, 0x32, 0xE8, 0x3F, 0x00, 0x82, 0x2D, 0x11, 0x00, 0xB2, 0x56, 0xEE, 0x49, 0x58, 0x97, 0xA0, 0xE0, 0x3F, 0x00, 0x6B, 0x00, 0xB9, 0xB2, 0x94, 0xE5, 0xBB, 0xBA, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x01, 0x02, 0x63, 0x01, 0x10, 0x00, 0x08, 0xE8, 0x7F, 0x00, 0x8C, 0x00, 0x05, 0xE8, 0x7F, 0x01, 0xA0, 0x00, 0x80, 0x4B, 0x70, 0x11, 0x01, 0x00, 0x2D, 0x02, 0x00, 0x41, 0x02, 0x01, 0x00, 0x08, 0xE8, 0x7F, 0x00, 0x8C, 0x00, 0x05, 0xE8, 0x7F, 0x01, 0xA0, 0x00, 0x80, 0x2D, 0xB2, 0x80, 0xA5, 0xE6, 0xBF, 0x01, 0x56, 0x01, 0x02, 0x00, 0x2D, 0x03, 0x00, 0x63, 0x03, 0x10, 0x00, 0x08, 0xE8, 0x7F, 0x00, 0x8C, 0x00, 0x05, 0xE8, 0x7F, 0x01, 0xA0, 0x00, 0x80, 0x0E, 0xE2, 0xA7, 0x11, 0x03, 0x01, 0x74, 0x03, 0x01, 0x03, 0x8C, 0xFF, 0xE4, 0x95, 0x01, 0x8C, 0xFF, 0xA7, 0xB0]);

export default class Profile extends Component<VMProps, VMState> {
	render() {
		return (
			<div id="gameport" class={ style.gameport }>
				<div id="windowport" class={ style.windowport }></div>
				<div id="errorpane" class={ style.errorpane }>
					<div id="errorcontent">...</div>
				</div>
			</div>
		);
	}

	componentDidMount() {
		const vm = new ZVM();
	
		glkoteLoaded.then(() => {
			const asAny = window as any;
			const Glk = asAny.Glk;
			const Dialog = asAny.Dialog;
			const options = {
				vm: vm,
				Dialog: Dialog,
				Glk: Glk
			};
	
			vm.prepare(z3, options);

			// This will call vm.init()
			Glk.init(options);
		});
	}	
}
